# Guy Bruneau, guybruneau@outlook.com
#
# Initial Release
# Date: 4 Feb 2025
# Version: 1.0
#
# Import Rosti ECS ThreatIntel Logs
# https://rosti.bin.re/feeds
# https://rosti.bin.re/exports/rosti-bulk-ecs-export
# Parsing wget  https://rosti.bin.re/exports/rosti-bulk-ecs-export -O rostiintel.json
#
# This logstash parser is for the DShield Honeypot
# https://isc.sans.edu/tools/honeypot
#
# This parser uses ECS version 8.x
# https://www.elastic.co/guide/en/ecs/current/ecs-tls.html

# https://www.elastic.co/guide/en/ecs/current/ecs-event.html

filter {
  if [log][file][path] =~ "rostiintel" {
    json {
      source => message
    }
    mutate {
       rename => { "ip" => "source.ip" }
       copy => {"source.ip" => "related.ip" }
       rename => { "attacks" => "threat.indicator.scanner_stats" }
       rename => { "count" => "threat.indicator.sightings" }
       rename => { "firstseen" => "threat.enrichments.indicator.first_seen"}
    }
  }
}


filter {
  if [log][file][path] =~ "rostiintel" {
    # https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html
    # Converting timestamp to accepted format
    #  epoch time: 1674309418
    date {
      match => [ "lastseen", "yyyy-MM-dd", "ISO8601" ]
      target => "@timestamp"
      timezone => "UTC"
    }
  }
}

# Add when the data was ingested to Elastic

filter {
  if [log][file][path] =~ "rostiintel" {
    ruby {
      code => "event.set('event.ingested' , Time.now.utc)"
    }
  }
}

filter {
  if [log][file][path] =~ "rostiintel" {
    mutate {
      add_field => { "event.dataset" => "ti_rosti" }
      add_field => { "event.category" => "threat" }
      add_field => { "event.kind" => "enrichment" }
      add_field => { "event.type" => "indicator" }
      add_field => { "event.outcome" => "unknown" }
      add_field => { "network.type" => "ipv4" }
      add_field => { "threat.indicator.provider" => "rostiintel" }
      add_field => { "threat.enrichments.indicator.type" => "ipv4-addr" }
      add_field => { "threat.indicator.type" => "ipv4-addr" }
      add_field => { "threat.feed.name" => "Rosti ThreatIntel" }
    }
  }
}

filter {
  if [log][file][path] =~ "rostiintel" {
    mutate {
      copy => { "related.ip" => "destination.ip" }
    }
  }
}

filter {
  if [log][file][path] =~ "rostiintel" {
    mutate {
      # This is used by the SIEM to match indicators
      copy => { "related.ip" => "threat.indicator.ip" }
    }
  }
}
